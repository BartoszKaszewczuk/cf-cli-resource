#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/cf-functions.sh

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/cf-cli-resource-request.XXXXXX)

cat > $payload <&0

api=$(jq -r '.source.api // ""' < $payload)
skip_cert_check=$(jq -r '.source.skip_cert_check // ""' < $payload)
username=$(jq -r '.source.username // ""' < $payload)
password=$(jq -r '.source.password // ""' < $payload)
params=$(jq -r '.params // ""' < $payload)

if [ -z "$api" ]; then
  echo "invalid payload (missing api)"
  exit 1
fi

if [ -z "$username" ]; then
  echo "invalid payload (missing username)"
  exit 1
fi

if [ -z "$password" ]; then
  echo "invalid payload (missing password)"
  exit 1
fi

cd $source

cf_login $api "$username" "$password" $skip_cert_check

commands=$(echo $params | jq -r 'keys_unsorted[]')

for command in $commands; do
  if [ "create_org" = "$command" ]; then
    org=$(echo $params | jq -r '.create_org.org')
    cf_create_org "$org"
  elif [ "delete_org" = "$command" ]; then
    org=$(echo $params | jq -r '.delete_org.org')
    cf_delete_org "$org"
  elif [ "create_space" = "$command" ]; then
    org=$(echo $params | jq -r '.create_space.org')
    space=$(echo $params | jq -r '.create_space.space')
    cf_create_space "$org" "$space"
  elif [ "delete_space" = "$command" ]; then
    org=$(echo $params | jq -r '.delete_space.org')
    space=$(echo $params | jq -r '.delete_space.space')
    cf_delete_space "$org" "$space"
  elif [ "create_service" = "$command" ]; then
    org=$(echo $params | jq -r '.create_service.org')
    space=$(echo $params | jq -r '.create_service.space')
    service=$(echo $params | jq -r '.create_service.service')
    plan=$(echo $params | jq -r '.create_service.plan')
    service_instance=$(echo $params | jq -r '.create_service.service_instance')
    configuration=$(echo $params | jq -r '.create_service.configuration // "{}"')
    tags=$(echo $params | jq -r '.create_service.tags // ""')
    cf_target "$org" "$space"
    cf_create_service "$service" "$plan" "$service_instance" "$configuration" "$tags"
  elif [ "delete_service" = "$command" ]; then
    org=$(echo $params | jq -r '.delete_service.org')
    space=$(echo $params | jq -r '.delete_service.space')
    service_instance=$(echo $params | jq -r '.delete_service.service_instance')
    cf_target "$org" "$space"
    cf_delete_service "$service_instance"
  elif [ "push" = "$command" ]; then
    org=$(echo $params | jq -r '.push.org')
    space=$(echo $params | jq -r '.push.space')
    manifest=$(echo $params | jq -r '.push.manifest')
    current_app_name=$(echo $params | jq -r '.push.current_app_name')
    cf_target "$org" "$space"
    cf_push_autopilot "$manifest" "$current_app_name"
  fi
done

# todo: metadata
jq -n \
--arg timestamp $(date +%s) \
'{
  version: {
    timestamp: $timestamp
  }
}' >&3
