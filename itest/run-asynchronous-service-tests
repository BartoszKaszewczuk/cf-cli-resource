#!/bin/bash

set -eu
set -o pipefail

test_dir=$(dirname $0)

source $test_dir/assert.sh
source $test_dir/helpers.sh
source $test_dir/config.sh

it_can_wait_for_service() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  local params=$(jq -n \
  --arg org "$1" \
  --arg space "$2" \
  --arg service_instance "$3" \
  '{
    command: "wait-for-service",
    org: $org,
    space: $space,
    service_instance: $service_instance
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')
  put_with_params "$config" "$working_dir" | jq -e '.version | keys == ["timestamp"]'

  assert::success cf_service_exists "$3"
}

org=$(generate_test_name_with_spaces "Org")
space=$(generate_test_name_with_spaces "Space")
app_name=$(generate_test_name_with_spaces "App")

service=$ASYNC_SERVICE
plan_1=$ASYNC_PLAN_1
plan_2=$ASYNC_PLAN_2
service_instance=$(generate_test_name_with_spaces "Async Service")
configuration_1=$ASYNC_CONFIGURATION_1
configuration_2=$ASYNC_CONFIGURATION_2
tags="list, of, tags"
wait_for_service="true"

setup_integration_tests "$org" "$space"

run it_can_create_a_service \"$org\" \"$space\" \"$service\" \"$plan_1\" \"$service_instance\" \"$configuration_1\"
run it_can_wait_for_service \"$org\" \"$space\" \"$service_instance\"
run it_can_update_a_service \"$org\" \"$space\" \"$service_instance\" \"$plan_2\" \"$configuration_2\" \"$tags\" \"$wait_for_service\"

run it_can_push_an_app \"$org\" \"$space\" \"$app_name\"

run it_can_bind_a_service \"$org\" \"$space\" \"$app_name\" \"$service_instance\"
run it_can_unbind_a_service \"$org\" \"$space\" \"$app_name\" \"$service_instance\"
run it_can_delete_a_service \"$org\" \"$space\" \"$service_instance\"

run it_can_delete_an_app \"$org\" \"$space\" \"$app_name\"

teardown_integration_tests "$org" "$space"
