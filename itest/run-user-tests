#!/bin/bash

set -eu
set -o pipefail

test_dir=$(dirname $0)

source $test_dir/helpers.sh
source $test_dir/config.sh

it_can_create_a_user_with_password() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg username "$username" \
  --arg password "$password" \
  '{
    command: "create-user",
    org: $org,
    space: $space,
    username: $username,
    password: $password
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')

  put_with_params "$config" "$working_dir" | jq -e '
    .version | keys == ["timestamp"]
  '

  cf_user_exists "$username"
}

it_can_create_a_user_with_origin() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg username "$origin_username" \
  --arg origin "$origin" \
  '{
    command: "create-user",
    org: $org,
    space: $space,
    username: $username,
    origin: $origin
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')

  put_with_params "$config" "$working_dir" | jq -e '
    .version | keys == ["timestamp"]
  '

  cf_user_exists "$username"
}

it_can_create_users_from_file() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  mkdir -p $working_dir/input
  echo "$users_csv" > $working_dir/input/users.csv

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  '{
    command: "create-users-from-file",
    org: $org,
    space: $space,
    file: "input/users.csv"
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')

  put_with_params "$config" "$working_dir" | jq -e '
    .version | keys == ["timestamp"]
  '

  cf_user_exists "$testprefix-bulkload-user1"
  cf_user_exists "$testprefix-bulkload-user2"
  cf_user_exists "$testprefix-bulkload-user3"
}

it_can_delete_a_user_with_origin() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg username "$origin_username" \
  '{
    command: "delete-user",
    org: $org,
    space: $space,
    username: $username
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')

  put_with_params "$config" "$working_dir" | jq -e '
    .version | keys == ["timestamp"]
  '

  ! cf_user_exists "$origin_username"
}

it_can_delete_a_user_with_password() {
  local working_dir=$(mktemp -d $TMPDIR/put-src.XXXXXX)

  local params=$(jq -n \
  --arg org "$org" \
  --arg space "$space" \
  --arg username "$username" \
  '{
    command: "delete-user",
    org: $org,
    space: $space,
    username: $username
  }')

  local config=$(echo $source | jq --argjson params "$params" '.params = $params')

  put_with_params "$config" "$working_dir" | jq -e '
    .version | keys == ["timestamp"]
  '

  ! cf_user_exists "$username"
}

setup_integration_tests

run it_can_create_a_user_with_password
run it_can_create_a_user_with_origin
run it_can_create_users_from_file

run it_can_delete_a_user_with_origin
run it_can_delete_a_user_with_password

teardown_integration_tests
